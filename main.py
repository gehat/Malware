import multiprocessing
from PyQt5.QtCore import QObject, QThread, pyqtSignal
from PyQt5.QtGui import QCursor, QFont, QPainter, QPen
from interface.Gui import *
from qframelesswindow import AcrylicWindow
from interface.Gui2 import llist_form
from interface.style import QSS
from malware_functions.logical_disc_name import List_Disk
from malware_functions.file_sc import *
from datetime import datetime
import gc
from malware_functions.scan_method import Scanner


class MainWindow(QtWidgets.QMainWindow, Ui_Form, Scanner):
    show_infected_files = QtCore.pyqtSignal(list)

    def __init__(self):
        super().__init__()
        self.ongoing_1 = True
        self.ongoing_2 = True
        self.stop = False
        self.sc = worker()
        self.infected_files_window = llist_form()
        self.infected_files_window.setupUi(self.infected_files_window)
        self.infected_files_window.setFixedSize(563, 367)
        # self.sc.resultReady.connect(self.show_infected_files_window)

        self.setupUi(self)

    # self.show_infected_files.connect(self.show_infected_files_window)

    def show_infected_files_window(self, result):
        self.infected_files_window.listWidget.clear()
        # создаем новое окно
        res = [x[0] for x in result if x[0] is not None]
        if len(res) != 0:
            for i in res:
                self.infected_files_window.listWidget.addItem(i)

        else:
            self.infected_files_window.listWidget.addItem('Угроз не обнаружено')
            self.infected_files_window.show()


    def on_click_quick_scan(self):
        self.ongoing_2 = not self.ongoing_2
        self.click_two() if self.ongoing_2 else self.click_one()


    def on_click_fill_scan(self):
        self.ongoing_1 = not self.ongoing_1
        self.click_two() if self.ongoing_1 else self.click_one()


    def click_one(self):
        self.scan_b.setVisible(False)
        self.scan_b_2.setVisible(False)
        self.scan_label.setVisible(True)
        self.scan_path.setVisible(True)
        self.scan_green_label.setVisible(True)
        self.scan_count_number.setVisible(True)
        self.scan_count.setVisible(True)
        self.scan_green_label_2.setVisible(True)
        self.scan_enemu_lable.setVisible(True)
        self.scan_enemu_count.setVisible(True)

        self.sc.start()


    def click_two(self):
        self.scan_b.setVisible(True)
        self.scan_b_2.setVisible(True)
        self.scan_label.setVisible(True)
        self.scan_path.setVisible(False)
        self.scan_green_label.setVisible(False)
        self.scan_count_number.setVisible(False)
        self.scan_count.setVisible(False)
        self.scan_cancel.setVisible(False)
        self.scan_green_label_2.setVisible(False)
        self.scan_enemu_lable.setVisible(False)
        self.scan_enemu_count.setVisible(False)
        self.sc.resultReady.connect(self.show_infected_files_window)


    def click_scan_main(self):
        if self.ongoing_1 or self.ongoing_2:
            self.scan_b_2.setVisible(True)
            self.scan_b.setVisible(True)
            self.scan_label.setVisible(True)
            self.scan_path.setVisible(False)
            self.scan_green_label.setVisible(False)
            self.scan_count_number.setVisible(False)
            self.scan_count.setVisible(False)
            self.scan_cancel.setVisible(False)
        if not self.ongoing_1 or not self.ongoing_2:
            self.scan_b_2.setVisible(False)
            self.scan_b.setVisible(False)
            self.scan_label.setVisible(True)
            self.scan_path.setVisible(True)
            self.scan_green_label.setVisible(True)
            self.scan_count_number.setVisible(True)
            self.scan_count.setVisible(True)
            self.scan_cancel.setVisible(True)


    def click_stop_scan(self):
        self.stop = True
        self.click_two()


def evnt_clicket_as_file():
    res = QtWidgets.QFileDialog.getOpenFileName()
    if not any(res):
        pass
    else:
        unbackdelete(res[0])
        ui.zeros_text.append(f'{res[0].split("/")[-1]}')


def evnt_clicket_as_folder():
    res = QtWidgets.QFileDialog.getExistingDirectory()
    if res:
        f = unbackdelete_folder(res)
        ui.zeros_text.append(f'{res.split("/")[-1]}')
        for i in f:
            ui.zeros_text.append(f'{i}')


class worker(QThread):
    resultReady = pyqtSignal(object)

    def __int__(self):
        QThread.__init__(self)

    def run(self):
        st = datetime.now()
        if ui.ongoing_2 is False:
            result = ui.quick_scan_function()
        if ui.ongoing_1 is False:
            result = ui.full_scan()

        gc.collect()
        print(f'Scan ended/n {datetime.now() - st}')
        self.resultReady.emit(result)

    # def stop(self):
    #     ui.click_stop_scan()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    app.setStyleSheet(QSS)
    Form = AcrylicWindow()
    ui = MainWindow()
    ui.setupUi(Form)
    ui.zeros_label.setVisible(False)
    ui.zeros_text.setVisible(False)
    ui.zeros_b_1.setVisible(False)
    ui.zeros_b_2.setVisible(False)
    ui.zeros_text.clear()
    ui.scan_b.setVisible(False)
    ui.scan_path.setVisible(False)
    ui.scan_count.setVisible(False)
    ui.scan_label.setVisible(False)
    ui.scan_count_number.setVisible(False)
    ui.scan_green_label.setVisible(False)
    ui.scan_enemu_lable.setVisible(False)
    ui.scan_enemu_count.setVisible(False)
    ui.scan_green_label_2.setVisible(False)
    ui.scan_cancel.setVisible(False)
    ui.scan_b_2.setVisible(False)
    Form.setFixedSize(716, 466)
    Form.setWindowOpacity(0.991)
    Form.show()
    ui.zeros_b_1.clicked.connect(evnt_clicket_as_file)
    ui.zeros_b_2.clicked.connect(evnt_clicket_as_folder)
    ui.scan_b_2.clicked.connect(ui.on_click_quick_scan)
    ui.scan_b.clicked.connect(ui.on_click_fill_scan)
    ui.scan_cancel.clicked.connect(ui.click_stop_scan)
    ui.scan_main.clicked.connect(ui.click_scan_main)
    sys.exit(app.exec_())
